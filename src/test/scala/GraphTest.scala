import org.scalatest.{FunSuite, Matchers}
import Graph._
import datastructure.graph.Node

class GraphTest extends FunSuite with Matchers {
  test("Find if Path Exists in Graph") {
    val conditions: Array[(Int, Array[Array[Int]], Int, Int, Boolean)] =
      Array(
        (3, Array(Array(0, 1), Array(1, 2), Array(2, 0)), 0, 2, true),
        (6, Array(Array(0, 1), Array(0, 2), Array(3, 5), Array(5, 4), Array(4, 3)), 0, 5, false),
        (1, Array(), 0, 0, true),
        (10, Array(Array(0, 7), Array(0, 8), Array(6, 1), Array(2, 0), Array(0, 4), Array(5, 8), Array(4, 7), Array(1, 3), Array(3, 5), Array(6, 5)), 7, 5, true)
      )


    for (cond <- conditions) {
      assert(validPathDFS(cond._1, cond._2, cond._3, cond._4) == cond._5)
      assert(validPathBFS(cond._1, cond._2, cond._3, cond._4) == cond._5)
    }
  }

  test("All Paths From Source to Target") {
    val conditions: Array[(Array[Array[Int]], List[List[Int]])] =
      Array(
        (Array(Array(1, 2), Array(3), Array(3), Array()), List(List(0, 1, 3), List(0, 2, 3))),
        (Array(Array(4, 3, 1), Array(3, 2, 4), Array(3), Array(4), Array()), List(List(0, 4), List(0, 3, 4), List(0, 1, 3, 4), List(0, 1, 2, 3, 4), List(0, 1, 4)))
      )

    for (cond <- conditions) {
      allPathsSourceTargetDFS(cond._1) should contain theSameElementsAs cond._2
      allPathsSourceTargetBFS(cond._1) should contain theSameElementsAs cond._2
    }
  }

  test("Clone Graph") {
    val node1 = new Node(1)
    val node2 = new Node(2)
    val node3 = new Node(3)
    val node4 = new Node(4)

    node1.neighbors = List(node2, node4)
    node2.neighbors = List(node1, node3)
    node3.neighbors = List(node2, node4)
    node4.neighbors = List(node1, node3)

    val newNode1 = cloneGraph(node1)
    assert(newNode1.neighbors.length == 2)
    newNode1.neighbors.map(_.value) should contain theSameElementsAs List(2, 4)
    assert(newNode1.neighbors.head.neighbors.length == 2)

  }

  test("Shortest Path in Binary Matrix") {
    val conditions: Array[(Array[Array[Int]], Int)] = Array(
      (Array(Array(0, 1), Array(1, 0)), 2),
      (Array(Array(0, 0, 0), Array(1, 1, 0), Array(1, 1, 0)), 4),
      (Array(Array(1, 0, 0), Array(1, 1, 0), Array(1, 1, 0)), -1),
      (Array(Array(0, 1, 1, 1, 1), Array(1, 0, 1, 1, 1), Array(0, 0, 1, 1, 1), Array(0, 0, 1, 1, 1), Array(1, 1, 0, 0, 0)), 7),
      (Array(Array(0, 1, 0, 0, 0, 0), Array(0, 1, 0, 1, 1, 0), Array(0, 1, 1, 0, 1, 0), Array(0, 0, 0, 0, 1, 0), Array(1, 1, 1, 1, 1, 0), Array(1, 1, 1, 1, 1, 0)), 14),
      (Array(Array(0, 1, 0, 0, 1, 1, 0), Array(1, 0, 0, 0, 0, 0, 0), Array(1, 0, 0, 1, 1, 1, 1), Array(0, 1, 0, 0, 0, 0, 0), Array(1, 0, 0, 0, 0, 0, 1), Array(1, 0, 0, 1, 0, 0, 0), Array(1, 0, 1, 0, 0, 1, 0)), 7),
      (Array(Array(0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1), Array(1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1), Array(0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1), Array(0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0), Array(0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0), Array(1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1), Array(0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0), Array(1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1), Array(1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0), Array(0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1), Array(1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1), Array(0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0), Array(0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0), Array(1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1), Array(0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0), Array(0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0), Array(0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0), Array(0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0), Array(1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1), Array(0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0), Array(1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0), Array(0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0), Array(1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1), Array(1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1), Array(1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1), Array(0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1), Array(0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1), Array(1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1), Array(1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0), Array(1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0), Array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1), Array(1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0), Array(0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1), Array(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0), Array(0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0), Array(1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1), Array(1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0), Array(0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1), Array(0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1), Array(1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1), Array(0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1), Array(1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1), Array(1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1), Array(0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), Array(1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0), Array(1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0), Array(0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0), Array(1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0), Array(0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0), Array(1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0), Array(1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1), Array(0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0), Array(1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1), Array(1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1), Array(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1), Array(1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1), Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1), Array(0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1), Array(1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0), Array(0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0), Array(0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1), Array(0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1), Array(0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0), Array(0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1), Array(0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0), Array(0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1), Array(0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0), Array(0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1), Array(1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0), Array(0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0), Array(1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1), Array(1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0), Array(1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1), Array(0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0), Array(0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0), Array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0), Array(1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1), Array(0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0), Array(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0), Array(0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0), Array(0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1), Array(1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1), Array(0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1), Array(1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0), Array(1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0), Array(0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1), Array(0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1), Array(1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0), Array(1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0), Array(1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1), Array(0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1), Array(1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1), Array(0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1), Array(1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0), Array(0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1), Array(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1), Array(0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0), Array(0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1), Array(0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0), Array(0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0)), 146)
    )

    for (cond <- conditions) {
      assert(shortestPathBinaryMatrix(cond._1) == cond._2)
    }
  }

  test("Reconstruct Itinerary") {
    val conditions: Array[(List[List[String]], List[String])] =
      Array(
        (List(List("MUC", "LHR"), List("JFK", "MUC"), List("SFO", "SJC"), List("LHR", "SFO")), List("JFK", "MUC", "LHR", "SFO", "SJC")),
        (List(List("JFK", "SFO"), List("JFK", "ATL"), List("SFO", "ATL"), List("ATL", "JFK"), List("ATL", "SFO")), List("JFK", "ATL", "JFK", "SFO", "ATL", "SFO")),
        (List(List("JFK", "KUL"), List("JFK", "NRT"), List("NRT", "JFK")), List("JFK", "NRT", "JFK", "KUL")),
        (List(List("AXA", "EZE"), List("EZE", "AUA"), List("ADL", "JFK"), List("ADL", "TIA"), List("AUA", "AXA"), List("EZE", "TIA"), List("EZE", "TIA"), List("AXA", "EZE"), List("EZE", "ADL"), List("ANU", "EZE"), List("TIA", "EZE"), List("JFK", "ADL"), List("AUA", "JFK"), List("JFK", "EZE"), List("EZE", "ANU"), List("ADL", "AUA"), List("ANU", "AXA"), List("AXA", "ADL"), List("AUA", "JFK"), List("EZE", "ADL"), List("ANU", "TIA"), List("AUA", "JFK"), List("TIA", "JFK"), List("EZE", "AUA"), List("AXA", "EZE"), List("AUA", "ANU"), List("ADL", "AXA"), List("EZE", "ADL"), List("AUA", "ANU"), List("AXA", "EZE"), List("TIA", "AUA"), List("AXA", "EZE"), List("AUA", "SYD"), List("ADL", "JFK"), List("EZE", "AUA"), List("ADL", "ANU"), List("AUA", "TIA"), List("ADL", "EZE"), List("TIA", "JFK"), List("AXA", "ANU"), List("JFK", "AXA"), List("JFK", "ADL"), List("ADL", "EZE"), List("AXA", "TIA"), List("JFK", "AUA"), List("ADL", "EZE"), List("JFK", "ADL"), List("ADL", "AXA"), List("TIA", "AUA"), List("AXA", "JFK"), List("ADL", "AUA"), List("TIA", "JFK"), List("JFK", "ADL"), List("JFK", "ADL"), List("ANU", "AXA"), List("TIA", "AXA"), List("EZE", "JFK"), List("EZE", "AXA"), List("ADL", "TIA"), List("JFK", "AUA"), List("TIA", "EZE"), List("EZE", "ADL"), List("JFK", "ANU"), List("TIA", "AUA"), List("EZE", "ADL"), List("ADL", "JFK"), List("ANU", "AXA"), List("AUA", "AXA"), List("ANU", "EZE"), List("ADL", "AXA"), List("ANU", "AXA"), List("TIA", "ADL"), List("JFK", "ADL"), List("JFK", "TIA"), List("AUA", "ADL"), List("AUA", "TIA"), List("TIA", "JFK"), List("EZE", "JFK"), List("AUA", "ADL"), List("ADL", "AUA"), List("EZE", "ANU"), List("ADL", "ANU"), List("AUA", "AXA"), List("AXA", "TIA"), List("AXA", "TIA"), List("ADL", "AXA"), List("EZE", "AXA"), List("AXA", "JFK"), List("JFK", "AUA"), List("ANU", "ADL"), List("AXA", "TIA"), List("ANU", "AUA"), List("JFK", "EZE"), List("AXA", "ADL"), List("TIA", "EZE"), List("JFK", "AXA"), List("AXA", "ADL"), List("EZE", "AUA"), List("AXA", "ANU"), List("ADL", "EZE"), List("AUA", "EZE")), List("JFK", "ADL", "ANU", "ADL", "ANU", "AUA", "ADL", "AUA", "ADL", "AUA", "ANU", "AXA", "ADL", "AUA", "ANU", "AXA", "ADL", "AXA", "ADL", "AXA", "ANU", "AXA", "ANU", "AXA", "EZE", "ADL", "AXA", "EZE", "ADL", "AXA", "EZE", "ADL", "EZE", "ADL", "EZE", "ADL", "EZE", "ANU", "EZE", "ANU", "EZE", "AUA", "AXA", "EZE", "AUA", "AXA", "EZE", "AUA", "AXA", "JFK", "ADL", "EZE", "AUA", "EZE", "AXA", "JFK", "ADL", "JFK", "ADL", "JFK", "ADL", "JFK", "ADL", "TIA", "ADL", "TIA", "AUA", "JFK", "ANU", "TIA", "AUA", "JFK", "AUA", "JFK", "AUA", "TIA", "AUA", "TIA", "AXA", "TIA", "EZE", "AXA", "TIA", "EZE", "JFK", "AXA", "TIA", "EZE", "JFK", "AXA", "TIA", "JFK", "EZE", "TIA", "JFK", "EZE", "TIA", "JFK", "TIA", "JFK", "AUA", "SYD"))
      )

    for (cond <- conditions) {
      assert(findItinerary(cond._1) == cond._2)
    }
  }

  test("All Paths from Source Lead to Destination") {
    val conditions: Array[(Int, Array[Array[Int]], Int, Int, Boolean)] =
      Array(
        (3, Array(Array(0, 1), Array(0, 2)), 0, 2, false),
        (4, Array(Array(0, 1), Array(0, 3), Array(1, 2), Array(2, 1)), 0, 3, false),
        (4, Array(Array(0, 1), Array(0, 2), Array(1, 3), Array(2, 3)), 0, 3, true),
        (2, Array(Array(0, 1), Array(1, 1)), 0, 1, false),
        (5, Array(Array(0, 1), Array(0, 2), Array(0, 3), Array(0, 3), Array(1, 2), Array(1, 3), Array(1, 4), Array(2, 3), Array(2, 4), Array(3, 4)), 0, 4, true),
        (2, Array(), 0, 1, false),
        (5, Array(Array(0, 1), Array(1, 2), Array(2, 3), Array(3, 4)), 1, 3, false),
        (1, Array(), 0, 0, true),
        (1, Array(Array(0, 0)), 0, 0, false),
        (3, Array(Array(0, 1), Array(1, 1), Array(1, 2)), 0, 2, false),
        (50, Array(Array(5, 15), Array(38, 34), Array(29, 5), Array(6, 32), Array(46, 2), Array(34, 22), Array(2, 25), Array(1, 18), Array(10, 10), Array(26, 46), Array(40, 46), Array(36, 19), Array(16, 13), Array(46, 6), Array(19, 32), Array(7, 41), Array(14, 32), Array(20, 13), Array(0, 43), Array(17, 14), Array(42, 41), Array(40, 12), Array(28, 7), Array(36, 35), Array(18, 2), Array(28, 11), Array(14, 32), Array(4, 9), Array(26, 6), Array(7, 17), Array(49, 41), Array(17, 2), Array(36, 34), Array(18, 0), Array(26, 15), Array(27, 10), Array(26, 46), Array(41, 14), Array(47, 19), Array(19, 14), Array(6, 3), Array(16, 14), Array(21, 43), Array(4, 15), Array(5, 2), Array(31, 2), Array(5, 30), Array(7, 33), Array(18, 2), Array(9, 33), Array(21, 44), Array(1, 43), Array(37, 17), Array(8, 24), Array(21, 33), Array(46, 45), Array(29, 14), Array(22, 32), Array(14, 14), Array(22, 32), Array(42, 6), Array(7, 14), Array(35, 13), Array(36, 35), Array(5, 25), Array(2, 3), Array(23, 22), Array(44, 33), Array(24, 13), Array(35, 19), Array(20, 14), Array(14, 32), Array(35, 5), Array(44, 13), Array(32, 32), Array(32, 32), Array(28, 46), Array(32, 32), Array(37, 10), Array(38, 46), Array(30, 30), Array(0, 3), Array(15, 9), Array(39, 15), Array(42, 44), Array(2, 20), Array(47, 0), Array(49, 44), Array(45, 4), Array(36, 22), Array(13, 13), Array(14, 30), Array(13, 14), Array(31, 31), Array(45, 3), Array(45, 5), Array(34, 14), Array(44, 9), Array(30, 30), Array(40, 12), Array(13, 30), Array(25, 20), Array(34, 14), Array(41, 22), Array(12, 34), Array(5, 33), Array(20, 22), Array(48, 5), Array(48, 7), Array(46, 0), Array(14, 32), Array(32, 30), Array(38, 46), Array(30, 30), Array(35, 15), Array(37, 20), Array(42, 2), Array(26, 13), Array(8, 48), Array(20, 30), Array(37, 33), Array(28, 18), Array(32, 30), Array(10, 10), Array(48, 44), Array(24, 14), Array(8, 9), Array(0, 14), Array(1, 43), Array(14, 14), Array(20, 22), Array(31, 10), Array(1, 0), Array(4, 7), Array(27, 41), Array(41, 22), Array(0, 22), Array(17, 19), Array(8, 16), Array(18, 38), Array(37, 23), Array(5, 22), Array(35, 23), Array(14, 30), Array(30, 30), Array(13, 32), Array(28, 23), Array(24, 25), Array(45, 2), Array(25, 22)), 15, 33, true)
      )

    for (cond <- conditions) {
      assert(leadsToDestination(cond._1, cond._2, cond._3, cond._4) == cond._5, f"wrong for array: ${cond._2.map(_.mkString("")).mkString(",")}")
    }
  }

  test("Rotting Oranges") {
    val conditions: Array[(Array[Array[Int]], Int)] =
      Array(
        (Array(Array(2, 1, 1), Array(1, 1, 0), Array(0, 1, 1)), 4),
        (Array(Array(2, 1, 1), Array(0, 1, 1), Array(1, 0, 1)), -1),
        (Array(Array(0, 2)), 0),
        (Array(Array(0, 1)), -1),
      )

    for (cond <- conditions) {
      assert(orangesRotting(cond._1) == cond._2, f"wrong for array: ${cond._1.map(_.mkString("")).mkString(",")}")
    }
  }

  test("Network Delay Time") {
    val conditions: Array[(Array[Array[Int]], Int, Int, Int)] =
      Array(
        (Array(Array(2, 1, 1), Array(2, 3, 1), Array(3, 4, 1)), 4, 2, 2),
        (Array(Array(1, 2, 1)), 2, 1, 1),
        (Array(Array(1, 2, 1)), 2, 2, -1),
        (Array(Array(1, 2, 1), Array(2, 3, 2), Array(1, 3, 4)), 3, 1, 3)
      )

    for (cond <- conditions) {
      assert(networkDelayTime(cond._1, cond._2, cond._3) == cond._4)
    }

    val source = scala.io.Source.fromResource("networkDelayTime.txt")
    val testcase: Array[Array[Int]] = source.getLines().map(_.split(s"],\\[")).next().map(_.split(",").map(_.toInt))
    assert(networkDelayTime(testcase, 50, 22) == 18)

  }

  test("Path With Minimum Effort") {
    val conditions: Array[(Array[Array[Int]], Int)] =
      Array(
        (Array(Array(1, 2, 2), Array(3, 8, 2), Array(5, 3, 5)), 2),
        (Array(Array(1, 2, 3), Array(3, 8, 4), Array(5, 3, 5)), 1),
        (Array(Array(1, 2, 1, 1, 1), Array(1, 2, 1, 2, 1), Array(1, 2, 1, 2, 1), Array(1, 2, 1, 2, 1), Array(1, 1, 1, 2, 1)), 0),
        (Array(Array(1, 10, 6, 7, 9, 10, 4, 9)), 9),
        (Array(Array(2, 1), Array(2, 1)), 1),
        (Array(Array(10, 8), Array(10, 8)), 2),
        (Array(Array(10, 8), Array(10, 8), Array(1, 2), Array(10, 3), Array(1, 3), Array(6, 3), Array(5, 2)), 6)
      )

    for (cond <- conditions) {
      assert(minimumEffortPath(cond._1) == cond._2)
    }

  }

  test("Course Schedule II") {
    val conditions: Array[(Int, Array[Array[Int]], Array[Int])] =
      Array(
        (2, Array(Array(1, 0)), Array(0, 1)),
        (4, Array(Array(1, 0), Array(2, 0), Array(3, 1), Array(3, 2)), Array(0, 1, 2, 3)),
        (1, Array(), Array(0)),
        (6, Array(Array(2, 5), Array(0, 5), Array(0, 4), Array(1, 4), Array(3, 2), Array(1, 3)), Array(5, 4, 2, 0, 3, 1)),
        (2, Array(), Array(0, 1)),
        (3, Array(Array(1, 0)), Array(0, 2, 1)),
      )

    for (cond <- conditions) {
      assert(findOrder(cond._1, cond._2).toList == cond._3.toList)
    }
  }

  test("Alien Dictionary") {
    val conditions: Array[(Array[String], String)] =
      Array(
        (Array("wrt", "wrf", "er", "ett", "rftt"), "wertf"),
        (Array("z", "x"), "zx"),
        (Array("z", "x", "z"), ""),
        (Array("ba", "bc", "ac", "cab"), "bac"),
        (Array("cab", "aaa", "aab"), "cab"),
        (Array("ywx", "wz", "xww", "xz", "zyy", "zwz"), "ywxz"),
        (Array("z", "z"), "z"),
        (Array("zy", "zx"), "zyx"),
        (Array("ab", "adc"), "abcd"),
        (Array("abc", "ab"), ""),
      )

    for (cond <- conditions) {
      assert(alienOrder(cond._1) == cond._2)
    }
  }

  test("Minimum Height Trees") {
    val conditions: Array[(Int, Array[Array[Int]], List[Int])] =
      Array(
        (4, Array(Array(1, 0), Array(1, 2), Array(1, 3)), List(1)),
        (6, Array(Array(3, 0), Array(3, 1), Array(3, 2), Array(3, 4), Array(5, 4)), List(3, 4)),
        (1, Array(), List(0)),
        (1212, Array(Array(0, 1), Array(0, 2), Array(1, 3), Array(1, 4), Array(4, 5), Array(4, 6), Array(6, 7), Array(5, 8), Array(7, 9), Array(1, 10), Array(1, 11), Array(2, 12), Array(9, 13), Array(13, 14), Array(0, 15), Array(10, 16), Array(7, 17), Array(8, 18), Array(2, 19), Array(6, 20), Array(10, 21), Array(5, 22), Array(16, 23), Array(20, 24), Array(0, 25), Array(7, 26), Array(20, 27), Array(11, 28), Array(23, 29), Array(16, 30), Array(27, 31), Array(4, 32), Array(26, 33), Array(21, 34), Array(24, 35), Array(0, 36), Array(16, 37), Array(9, 38), Array(8, 39), Array(19, 40), Array(10, 41), Array(39, 42), Array(39, 43), Array(42, 44), Array(27, 45), Array(4, 46), Array(3, 47), Array(39, 48), Array(0, 49), Array(40, 50), Array(45, 51), Array(21, 52), Array(33, 53), Array(40, 54), Array(40, 55), Array(7, 56), Array(23, 57), Array(9, 58), Array(3, 59), Array(35, 60), Array(32, 61), Array(56, 62), Array(59, 63), Array(9, 64), Array(41, 65), Array(58, 66), Array(64, 67), Array(54, 68), Array(23, 69), Array(21, 70), Array(65, 71), Array(22, 72), Array(40, 73), Array(16, 74), Array(56, 75), Array(62, 76), Array(32, 77), Array(17, 78), Array(66, 79), Array(24, 80), Array(7, 81), Array(29, 82), Array(8, 83), Array(80, 84), Array(10, 85), Array(16, 86), Array(68, 87), Array(83, 88), Array(42, 89), Array(40, 90), Array(23, 91), Array(7, 92), Array(82, 93), Array(66, 94), Array(84, 95), Array(23, 96), Array(22, 97), Array(11, 98), Array(60, 99), Array(11, 100), Array(15, 101), Array(67, 102), Array(98, 103), Array(51, 104), Array(38, 105), Array(94, 106), Array(33, 107), Array(92, 108), Array(96, 109), Array(104, 110), Array(85, 111), Array(75, 112), Array(66, 113), Array(108, 114), Array(83, 115), Array(71, 116), Array(65, 117), Array(92, 118), Array(10, 119), Array(35, 120), Array(14, 121), Array(98, 122), Array(63, 123), Array(93, 124), Array(65, 125), Array(24, 126), Array(7, 127), Array(13, 128), Array(63, 129), Array(111, 130), Array(106, 131), Array(73, 132), Array(123, 133), Array(12, 134), Array(73, 135), Array(72, 136), Array(98, 137), Array(42, 138), Array(0, 139), Array(13, 140), Array(67, 141), Array(112, 142), Array(67, 143), Array(55, 144), Array(141, 145), Array(1, 146), Array(121, 147), Array(70, 148), Array(74, 149), Array(149, 150), Array(127, 151), Array(4, 152), Array(51, 153), Array(135, 154), Array(77, 155), Array(47, 156), Array(146, 157), Array(72, 158), Array(108, 159), Array(39, 160), Array(65, 161), Array(157, 162), Array(109, 163), Array(65, 164), Array(110, 165), Array(106, 166), Array(84, 167), Array(22, 168), Array(96, 169), Array(32, 170), Array(14, 171), Array(86, 172), Array(47, 173), Array(36, 174), Array(92, 175), Array(110, 176), Array(38, 177), Array(54, 178), Array(51, 179), Array(53, 180), Array(135, 181), Array(165, 182), Array(178, 183), Array(154, 184), Array(171, 185), Array(155, 186), Array(19, 187), Array(163, 188), Array(163, 189), Array(188, 190), Array(16, 191), Array(73, 192), Array(68, 193), Array(38, 194), Array(180, 195), Array(120, 196), Array(54, 197), Array(9, 198), Array(86, 199), Array(19, 200), Array(73, 201), Array(2, 202), Array(156, 203), Array(170, 204), Array(165, 205), Array(10, 206), Array(62, 207), Array(100, 208), Array(132, 209), Array(47, 210), Array(123, 211), Array(175, 212), Array(200, 213), Array(6, 214), Array(0, 215), Array(8, 216), Array(179, 217), Array(109, 218), Array(126, 219), Array(151, 220), Array(109, 221), Array(63, 222), Array(68, 223), Array(140, 224), Array(65, 225), Array(55, 226), Array(75, 227), Array(32, 228), Array(1, 229), Array(93, 230), Array(13, 231), Array(219, 232), Array(110, 233), Array(48, 234), Array(17, 235), Array(24, 236), Array(127, 237), Array(43, 238), Array(130, 239), Array(14, 240), Array(135, 241), Array(154, 242), Array(44, 243), Array(130, 244), Array(183, 245), Array(143, 246), Array(70, 247), Array(146, 248), Array(151, 249), Array(187, 250), Array(73, 251), Array(5, 252), Array(80, 253), Array(168, 254), Array(32, 255), Array(240, 256), Array(250, 257), Array(207, 258), Array(202, 259), Array(151, 260), Array(236, 261), Array(153, 262), Array(55, 263), Array(121, 264), Array(141, 265), Array(37, 266), Array(73, 267), Array(6, 268), Array(35, 269), Array(217, 270), Array(234, 271), Array(128, 272), Array(84, 273), Array(73, 274), Array(105, 275), Array(141, 276), Array(149, 277), Array(265, 278), Array(26, 279), Array(213, 280), Array(219, 281), Array(157, 282), Array(171, 283), Array(31, 284), Array(284, 285), Array(8, 286), Array(112, 287), Array(264, 288), Array(252, 289), Array(225, 290), Array(255, 291), Array(287, 292), Array(43, 293), Array(2, 294), Array(14, 295), Array(106, 296), Array(275, 297), Array(104, 298), Array(210, 299), Array(66, 300), Array(117, 301), Array(116, 302), Array(279, 303), Array(61, 304), Array(198, 305), Array(198, 306), Array(190, 307), Array(8, 308), Array(47, 309), Array(288, 310), Array(211, 311), Array(261, 312), Array(312, 313), Array(38, 314), Array(101, 315), Array(251, 316), Array(285, 317), Array(192, 318), Array(269, 319), Array(137, 320), Array(282, 321), Array(68, 322), Array(24, 323), Array(194, 324), Array(85, 325), Array(261, 326), Array(315, 327), Array(57, 328), Array(80, 329), Array(93, 330), Array(241, 331), Array(166, 332), Array(236, 333), Array(62, 334), Array(291, 335), Array(217, 336), Array(152, 337), Array(132, 338), Array(64, 339), Array(123, 340), Array(129, 341), Array(165, 342), Array(18, 343), Array(341, 344), Array(39, 345), Array(76, 346), Array(60, 347), Array(132, 348), Array(156, 349), Array(346, 350), Array(113, 351), Array(283, 352), Array(153, 353), Array(256, 354), Array(305, 355), Array(234, 356), Array(72, 357), Array(312, 358), Array(286, 359), Array(259, 360), Array(170, 361), Array(213, 362), Array(162, 363), Array(261, 364), Array(109, 365), Array(139, 366), Array(349, 367), Array(57, 368), Array(245, 369), Array(56, 370), Array(71, 371), Array(314, 372), Array(138, 373), Array(273, 374), Array(241, 375), Array(217, 376), Array(326, 377), Array(23, 378), Array(141, 379), Array(149, 380), Array(296, 381), Array(78, 382), Array(38, 383), Array(258, 384), Array(90, 385), Array(30, 386), Array(214, 387), Array(245, 388), Array(252, 389), Array(47, 390), Array(234, 391), Array(76, 392), Array(220, 393), Array(194, 394), Array(172, 395), Array(122, 396), Array(36, 397), Array(341, 398), Array(51, 399), Array(225, 400), Array(303, 401), Array(69, 402), Array(150, 403), Array(118, 404), Array(38, 405), Array(398, 406), Array(135, 407), Array(231, 408), Array(322, 409), Array(120, 410), Array(272, 411), Array(332, 412), Array(259, 413), Array(80, 414), Array(153, 415), Array(67, 416), Array(416, 417), Array(414, 418), Array(166, 419), Array(301, 420), Array(127, 421), Array(262, 422), Array(152, 423), Array(407, 424), Array(412, 425), Array(288, 426), Array(23, 427), Array(315, 428), Array(163, 429), Array(316, 430), Array(193, 431), Array(4, 432), Array(415, 433), Array(118, 434), Array(69, 435), Array(413, 436), Array(107, 437), Array(390, 438), Array(117, 439), Array(296, 440), Array(437, 441), Array(312, 442), Array(356, 443), Array(68, 444), Array(212, 445), Array(131, 446), Array(36, 447), Array(417, 448), Array(122, 449), Array(294, 450), Array(408, 451), Array(104, 452), Array(196, 453), Array(27, 454), Array(361, 455), Array(136, 456), Array(127, 457), Array(350, 458), Array(188, 459), Array(55, 460), Array(39, 461), Array(70, 462), Array(78, 463), Array(87, 464), Array(402, 465), Array(306, 466), Array(50, 467), Array(48, 468), Array(420, 469), Array(196, 470), Array(201, 471), Array(154, 472), Array(46, 473), Array(340, 474), Array(107, 475), Array(137, 476), Array(448, 477), Array(204, 478), Array(212, 479), Array(257, 480), Array(195, 481), Array(193, 482), Array(391, 483), Array(45, 484), Array(339, 485), Array(156, 486), Array(263, 487), Array(444, 488), Array(445, 489), Array(264, 490), Array(270, 491), Array(134, 492), Array(368, 493), Array(195, 494), Array(302, 495), Array(397, 496), Array(29, 497), Array(437, 498), Array(65, 499), Array(103, 500), Array(9, 501), Array(299, 502), Array(408, 503), Array(249, 504), Array(330, 505), Array(493, 506), Array(92, 507), Array(354, 508), Array(15, 509), Array(124, 510), Array(68, 511), Array(1, 512), Array(316, 513), Array(374, 514), Array(206, 515), Array(499, 516), Array(241, 517), Array(116, 518), Array(461, 519), Array(294, 520), Array(90, 521), Array(231, 522), Array(188, 523), Array(220, 524), Array(342, 525), Array(122, 526), Array(19, 527), Array(347, 528), Array(403, 529), Array(38, 530), Array(308, 531), Array(78, 532), Array(67, 533), Array(445, 534), Array(172, 535), Array(88, 536), Array(98, 537), Array(197, 538), Array(73, 539), Array(405, 540), Array(435, 541), Array(135, 542), Array(525, 543), Array(534, 544), Array(167, 545), Array(353, 546), Array(20, 547), Array(532, 548), Array(351, 549), Array(252, 550), Array(55, 551), Array(419, 552), Array(370, 553), Array(431, 554), Array(522, 555), Array(116, 556), Array(126, 557), Array(121, 558), Array(354, 559), Array(468, 560), Array(552, 561), Array(219, 562), Array(84, 563), Array(390, 564), Array(155, 565), Array(446, 566), Array(154, 567), Array(292, 568), Array(199, 569), Array(428, 570), Array(467, 571), Array(437, 572), Array(70, 573), Array(509, 574), Array(17, 575), Array(18, 576), Array(173, 577), Array(356, 578), Array(157, 579), Array(443, 580), Array(278, 581), Array(352, 582), Array(105, 583), Array(71, 584), Array(280, 585), Array(256, 586), Array(574, 587), Array(496, 588), Array(132, 589), Array(255, 590), Array(223, 591), Array(381, 592), Array(82, 593), Array(300, 594), Array(142, 595), Array(249, 596), Array(287, 597), Array(323, 598), Array(107, 599), Array(384, 600), Array(299, 601), Array(362, 602), Array(224, 603), Array(34, 604), Array(548, 605), Array(420, 606), Array(65, 607), Array(416, 608), Array(67, 609), Array(414, 610), Array(226, 611), Array(572, 612), Array(564, 613), Array(244, 614), Array(472, 615), Array(109, 616), Array(95, 617), Array(297, 618), Array(202, 619), Array(175, 620), Array(9, 621), Array(285, 622), Array(82, 623), Array(473, 624), Array(170, 625), Array(30, 626), Array(527, 627), Array(128, 628), Array(79, 629), Array(339, 630), Array(582, 631), Array(481, 632), Array(80, 633), Array(39, 634), Array(588, 635), Array(632, 636), Array(422, 637), Array(174, 638), Array(10, 639), Array(164, 640), Array(305, 641), Array(361, 642), Array(441, 643), Array(627, 644), Array(63, 645), Array(133, 646), Array(582, 647), Array(618, 648), Array(13, 649), Array(391, 650), Array(336, 651), Array(649, 652), Array(509, 653), Array(27, 654), Array(21, 655), Array(221, 656), Array(517, 657), Array(75, 658), Array(432, 659), Array(232, 660), Array(388, 661), Array(111, 662), Array(598, 663), Array(523, 664), Array(656, 665), Array(192, 666), Array(261, 667), Array(535, 668), Array(635, 669), Array(401, 670), Array(37, 671), Array(129, 672), Array(643, 673), Array(583, 674), Array(310, 675), Array(463, 676), Array(461, 677), Array(440, 678), Array(420, 679), Array(649, 680), Array(646, 681), Array(388, 682), Array(101, 683), Array(602, 684), Array(358, 685), Array(189, 686), Array(427, 687), Array(461, 688), Array(566, 689), Array(556, 690), Array(629, 691), Array(239, 692), Array(454, 693), Array(653, 694), Array(93, 695), Array(489, 696), Array(307, 697), Array(53, 698), Array(403, 699), Array(639, 700), Array(39, 701), Array(474, 702), Array(518, 703), Array(28, 704), Array(590, 705), Array(285, 706), Array(244, 707), Array(26, 708), Array(46, 709), Array(546, 710), Array(508, 711), Array(391, 712), Array(631, 713), Array(332, 714), Array(246, 715), Array(146, 716), Array(57, 717), Array(108, 718), Array(225, 719), Array(139, 720), Array(104, 721), Array(4, 722), Array(267, 723), Array(638, 724), Array(615, 725), Array(505, 726), Array(127, 727), Array(631, 728), Array(15, 729), Array(728, 730), Array(321, 731), Array(236, 732), Array(333, 733), Array(303, 734), Array(390, 735), Array(632, 736), Array(77, 737), Array(28, 738), Array(195, 739), Array(175, 740), Array(687, 741), Array(735, 742), Array(265, 743), Array(391, 744), Array(733, 745), Array(408, 746), Array(580, 747), Array(501, 748), Array(195, 749), Array(61, 750), Array(515, 751), Array(94, 752), Array(162, 753), Array(695, 754), Array(665, 755), Array(666, 756), Array(346, 757), Array(708, 758), Array(758, 759), Array(490, 760), Array(65, 761), Array(394, 762), Array(278, 763), Array(462, 764), Array(645, 765), Array(393, 766), Array(363, 767), Array(154, 768), Array(422, 769), Array(726, 770), Array(275, 771), Array(682, 772), Array(698, 773), Array(659, 774), Array(619, 775), Array(101, 776), Array(247, 777), Array(218, 778), Array(421, 779), Array(195, 780), Array(366, 781), Array(220, 782), Array(708, 783), Array(88, 784), Array(321, 785), Array(777, 786), Array(105, 787), Array(477, 788), Array(234, 789), Array(625, 790), Array(344, 791), Array(406, 792), Array(546, 793), Array(56, 794), Array(437, 795), Array(41, 796), Array(278, 797), Array(123, 798), Array(397, 799), Array(101, 800), Array(301, 801), Array(581, 802), Array(118, 803), Array(547, 804), Array(40, 805), Array(365, 806), Array(151, 807), Array(207, 808), Array(495, 809), Array(533, 810), Array(804, 811), Array(809, 812), Array(47, 813), Array(504, 814), Array(223, 815), Array(45, 816), Array(648, 817), Array(226, 818), Array(361, 819), Array(201, 820), Array(745, 821), Array(701, 822), Array(671, 823), Array(62, 824), Array(477, 825), Array(476, 826), Array(742, 827), Array(25, 828), Array(524, 829), Array(441, 830), Array(269, 831), Array(574, 832), Array(420, 833), Array(767, 834), Array(752, 835), Array(714, 836), Array(764, 837), Array(498, 838), Array(402, 839), Array(23, 840), Array(406, 841), Array(121, 842), Array(648, 843), Array(633, 844), Array(619, 845), Array(478, 846), Array(439, 847), Array(323, 848), Array(352, 849), Array(51, 850), Array(236, 851), Array(624, 852), Array(42, 853), Array(460, 854), Array(151, 855), Array(406, 856), Array(752, 857), Array(664, 858), Array(759, 859), Array(263, 860), Array(284, 861), Array(774, 862), Array(534, 863), Array(552, 864), Array(43, 865), Array(551, 866), Array(16, 867), Array(655, 868), Array(795, 869), Array(376, 870), Array(253, 871), Array(825, 872), Array(785, 873), Array(664, 874), Array(341, 875), Array(840, 876), Array(205, 877), Array(664, 878), Array(491, 879), Array(75, 880), Array(495, 881), Array(690, 882), Array(374, 883), Array(460, 884), Array(62, 885), Array(230, 886), Array(58, 887), Array(675, 888), Array(797, 889), Array(59, 890), Array(45, 891), Array(589, 892), Array(563, 893), Array(224, 894), Array(738, 895), Array(680, 896), Array(523, 897), Array(662, 898), Array(256, 899), Array(498, 900), Array(285, 901), Array(891, 902), Array(233, 903), Array(410, 904), Array(317, 905), Array(621, 906), Array(470, 907), Array(470, 908), Array(421, 909), Array(732, 910), Array(692, 911), Array(27, 912), Array(287, 913), Array(311, 914), Array(397, 915), Array(639, 916), Array(622, 917), Array(554, 918), Array(60, 919), Array(601, 920), Array(570, 921), Array(517, 922), Array(405, 923), Array(840, 924), Array(90, 925), Array(738, 926), Array(668, 927), Array(65, 928), Array(923, 929), Array(266, 930), Array(211, 931), Array(252, 932), Array(40, 933), Array(40, 934), Array(295, 935), Array(301, 936), Array(868, 937), Array(425, 938), Array(530, 939), Array(123, 940), Array(857, 941), Array(823, 942), Array(379, 943), Array(567, 944), Array(135, 945), Array(448, 946), Array(31, 947), Array(507, 948), Array(681, 949), Array(237, 950), Array(243, 951), Array(747, 952), Array(659, 953), Array(436, 954), Array(135, 955), Array(704, 956), Array(695, 957), Array(89, 958), Array(69, 959), Array(248, 960), Array(596, 961), Array(635, 962), Array(579, 963), Array(831, 964), Array(280, 965), Array(712, 966), Array(862, 967), Array(759, 968), Array(825, 969), Array(102, 970), Array(802, 971), Array(164, 972), Array(276, 973), Array(970, 974), Array(705, 975), Array(226, 976), Array(449, 977), Array(577, 978), Array(393, 979), Array(47, 980), Array(359, 981), Array(615, 982), Array(173, 983), Array(918, 984), Array(756, 985), Array(731, 986), Array(812, 987), Array(322, 988), Array(583, 989), Array(131, 990), Array(812, 991), Array(753, 992), Array(712, 993), Array(826, 994), Array(914, 995), Array(460, 996), Array(984, 997), Array(931, 998), Array(372, 999), Array(916, 1000), Array(59, 1001), Array(530, 1002), Array(278, 1003), Array(979, 1004), Array(85, 1005), Array(705, 1006), Array(350, 1007), Array(465, 1008), Array(161, 1009), Array(246, 1010), Array(525, 1011), Array(146, 1012), Array(797, 1013), Array(684, 1014), Array(961, 1015), Array(525, 1016), Array(946, 1017), Array(973, 1018), Array(1014, 1019), Array(996, 1020), Array(436, 1021), Array(416, 1022), Array(902, 1023), Array(161, 1024), Array(438, 1025), Array(492, 1026), Array(746, 1027), Array(467, 1028), Array(967, 1029), Array(376, 1030), Array(550, 1031), Array(479, 1032), Array(138, 1033), Array(690, 1034), Array(157, 1035), Array(645, 1036), Array(969, 1037), Array(459, 1038), Array(968, 1039), Array(135, 1040), Array(442, 1041), Array(846, 1042), Array(75, 1043), Array(418, 1044), Array(741, 1045), Array(529, 1046), Array(1013, 1047), Array(845, 1048), Array(376, 1049), Array(876, 1050), Array(945, 1051), Array(679, 1052), Array(118, 1053), Array(351, 1054), Array(186, 1055), Array(662, 1056), Array(55, 1057), Array(897, 1058), Array(150, 1059), Array(732, 1060), Array(647, 1061), Array(824, 1062), Array(136, 1063), Array(84, 1064), Array(9, 1065), Array(234, 1066), Array(656, 1067), Array(147, 1068), Array(399, 1069), Array(875, 1070), Array(962, 1071), Array(905, 1072), Array(950, 1073), Array(433, 1074), Array(219, 1075), Array(190, 1076), Array(809, 1077), Array(163, 1078), Array(689, 1079), Array(713, 1080), Array(844, 1081), Array(630, 1082), Array(971, 1083), Array(536, 1084), Array(992, 1085), Array(579, 1086), Array(1024, 1087), Array(843, 1088), Array(556, 1089), Array(241, 1090), Array(613, 1091), Array(268, 1092), Array(789, 1093), Array(837, 1094), Array(595, 1095), Array(432, 1096), Array(470, 1097), Array(392, 1098), Array(560, 1099), Array(1083, 1100), Array(1013, 1101), Array(231, 1102), Array(857, 1103), Array(74, 1104), Array(964, 1105), Array(395, 1106), Array(606, 1107), Array(110, 1108), Array(149, 1109), Array(904, 1110), Array(146, 1111), Array(150, 1112), Array(243, 1113), Array(878, 1114), Array(464, 1115), Array(273, 1116), Array(391, 1117), Array(430, 1118), Array(692, 1119), Array(242, 1120), Array(868, 1121), Array(613, 1122), Array(592, 1123), Array(813, 1124), Array(508, 1125), Array(135, 1126), Array(563, 1127), Array(183, 1128), Array(1096, 1129), Array(1111, 1130), Array(685, 1131), Array(810, 1132), Array(550, 1133), Array(1, 1134), Array(187, 1135), Array(447, 1136), Array(45, 1137), Array(547, 1138), Array(649, 1139), Array(1126, 1140), Array(54, 1141), Array(243, 1142), Array(141, 1143), Array(1079, 1144), Array(183, 1145), Array(660, 1146), Array(494, 1147), Array(152, 1148), Array(259, 1149), Array(723, 1150), Array(414, 1151), Array(910, 1152), Array(975, 1153), Array(785, 1154), Array(922, 1155), Array(648, 1156), Array(563, 1157), Array(765, 1158), Array(375, 1159), Array(388, 1160), Array(945, 1161), Array(442, 1162), Array(560, 1163), Array(1097, 1164), Array(1083, 1165), Array(400, 1166), Array(5, 1167), Array(299, 1168), Array(3, 1169), Array(1045, 1170), Array(552, 1171), Array(597, 1172), Array(1025, 1173), Array(693, 1174), Array(924, 1175), Array(409, 1176), Array(1170, 1177), Array(63, 1178), Array(146, 1179), Array(503, 1180), Array(1121, 1181), Array(956, 1182), Array(741, 1183), Array(388, 1184), Array(360, 1185), Array(189, 1186), Array(591, 1187), Array(538, 1188), Array(651, 1189), Array(476, 1190), Array(870, 1191), Array(484, 1192), Array(1101, 1193), Array(837, 1194), Array(489, 1195), Array(366, 1196), Array(1049, 1197), Array(93, 1198), Array(844, 1199), Array(739, 1200), Array(175, 1201), Array(1061, 1202), Array(330, 1203), Array(1, 1204), Array(1097, 1205), Array(784, 1206), Array(807, 1207), Array(1024, 1208), Array(953, 1209), Array(408, 1210), Array(340, 1211)), List(4))
      )

    for (cond <- conditions) {
      assert(findMinHeightTrees(cond._1, cond._2) == cond._3)
    }
  }

  test("Parallel Courses") {
    val conditions: Array[(Int, Array[Array[Int]], Int)] =
      Array(
        (3, Array(Array(1, 3), Array(2, 3)), 2),
        (3, Array(Array(1, 2), Array(2, 3), Array(3, 1)), -1),
        (6, Array(Array(3, 6), Array(1, 6), Array(1, 5), Array(2, 5), Array(4, 3), Array(2, 4)), 4)
      )

    for (cond <- conditions) {
      assert(minimumSemesters(cond._1, cond._2) == cond._3)
    }
  }

}
